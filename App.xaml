<Application x:Class="WpfApp1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:Gamanet.C4.Client.Common.Converters"
             xmlns:wpf="clr-namespace:Gamanet.C4.Resources.WPF;assembly=Gamanet.C4.Resources.WPF" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             Startup="Application_Startup">
    <Application.Resources>
        <converters:CanExpandConverter x:Key="CanExpandConverter" />
        <converters:LevelToIndentConverter x:Key="LevelToIndentConverter" />

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="19" />
            <Setter Property="Height" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border
                            Width="19"
                            Height="13"
                            Background="Transparent">
                                <Border
                                Width="9"
                                Height="9"
                                BorderBrush="Black"
                                BorderThickness="1"
                                CornerRadius="0"
                                SnapsToDevicePixels="True">
                                    <Path
                                    Name="ExpandPath"
                                    Margin="1,1,1,1"
                                    Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z"
                                    Fill="Black" />
                                </Border>
                            </Border>
                            <Rectangle Fill="Transparent" Stretch="Fill" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Path.Data">
                                    <Setter.Value>
                                        <StreamGeometry>M0,2L0,3 5,3 5,2z</StreamGeometry>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="NodeTemplate">
            <Border x:Name="ItemBorder"
                    BorderBrush="LightGray"
                    BorderThickness="0">
                <Grid Height="25"
                                          x:Name="RawContainer">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="350"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Margin="3"
                                x:Name="TreeItemHolder">
                        <WrapPanel>
                            <ToggleButton
                                Uid="Expander"
                                x:Name="Expander"
                                Margin="{Binding Level,
                                            Converter={StaticResource LevelToIndentConverter}}"
                                ClickMode="Press"
                                IsChecked="{Binding IsExpanded, 
                                            Mode=TwoWay}"
                                Style="{StaticResource ExpandCollapseToggleStyle}"      
                                Visibility="{Binding IsExpandable, 
                                                    Converter={StaticResource CanExpandConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:CallMethodAction MethodName="ExpandNext_Clicked"
                                                            TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:CallMethodAction MethodName="CollapseNext_Clicked"
                                                            TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ToggleButton>

                            <TextBlock Text="{Binding Name}"
                                       FontSize="14"
                                       Margin="10,0,0,0"
                                       VerticalAlignment="Center"/>
                        </WrapPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>

        <Style TargetType="{x:Type ListViewItem}" x:Key="PermissionsListViewItemStyle">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2,0,5,0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ListView.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="White" />
                </Trigger>
                <Trigger Property="ListView.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#F0F0F0" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DarkGray" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E8D1C7" />
                    <Setter Property="TextElement.Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="ListView" x:Key="PermissionsListViewStyle">
            <Setter Property="ItemContainerStyle" Value="{StaticResource PermissionsListViewItemStyle}" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        </Style>

        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
            <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
            <Setter Property="LineHeight" Value="17"/>
            <Setter Property="Width" Value="100"/>
        </Style>

        <DataTemplate x:Key="NameHeaderTemplate">
            <TextBlock Text="{wpf:Txt txtName}" 
                       Style="{StaticResource HeaderTextStyle}" />
        </DataTemplate>

        <Style x:Key="HeaderContainerStyle" 
               TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="Black" />
            <Setter Property="Height" Value="46" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="White" 
                                    BorderThickness="0,0,1,0">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PermissionsStateChangeContextMenuItemStyle"
               TargetType="MenuItem">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Grid Background="{TemplateBinding Background}"
                              MaxWidth="300">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="1"
                                   VerticalAlignment="Center"
                                   Source="{TemplateBinding Icon}"/>

                            <TextBlock Text="{TemplateBinding Header}"
                                       Grid.Column="3"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       TextWrapping="WrapWithOverflow"
                                       TextTrimming="CharacterEllipsis"
                                       LineStackingStrategy="BlockLineHeight"
                                       LineHeight="17"
                                       FontSize="14"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="LightBlue"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Aqua" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
